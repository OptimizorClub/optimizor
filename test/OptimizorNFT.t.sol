// SPDX-License-Identifier: MIT
pragma solidity >=0.8.18;

import {BaseTest, IChallenge, SQRT_ID, SUM_ID, ISqrt} from "test/BaseTest.sol";
import {computeKey} from "test/CommitHash.sol";
import {ExpensiveSqrt2, ExpensiveSqrt3} from "test/SqrtChallengeSolutions.sol";

import {packTokenId} from "src/DataHelpers.sol";
import {TokenDetails} from "src/TokenDetails.sol";
import {Base64} from "src/Base64.sol";

import {Optimizor} from "src/Optimizor.sol";
import {OptimizorNFT} from "src/OptimizorNFT.sol";

uint256 constant SALT = 0;

contract OptimizorTest is BaseTest {
    function run() external returns (string memory) {
        setUp();
        testCheapExpensiveSqrt();
        uint256 tokenId = (SQRT_ID << 32) | 2;
        return opt.tokenURI(tokenId);
    }

    function testNameAndSymbol() public {
        assertEq(opt.name(), "Optimizor Club");
        assertEq(opt.symbol(), "OC");
    }

    function testContractURI() public {
        string memory logo = string.concat(
            '<svg width="308.531" height="112.033" viewBox="0 0 81.632 29.642" xmlns="http://www.w3.org/2000/svg">'
            '<path d="M13.092 5.623h-.622V5H6.244v.623h.623v.622h-.623v.623h-.622v-.623h-.623v6.226h.623v.622h.622v.623h6.226v-.623h.622v-.622h.623V6.245h-.623zm-3.735 5.603V6.868h1.868v4.358zM21.81 7.49v-.622h-.622v-.623h-5.603v.623h1.245v.622h-.623v.623h-.622V6.868h-.623v6.225h.623v.623h2.49v-.623h.622v-1.867h2.49v-.623h.623V9.98h.622V7.49zm-3.113.623h1.246V9.98h-1.246zm11.836-1.868h-6.225v.623h1.245v.622h-.623v.623h-.622v.622h1.245v4.358h.622v.623h2.49v-.623h.623V8.736h1.245v-.623h.623V6.868h-.623zm-6.225.623h-.623v1.245h.623zm11.213-.623h-2.49v.623h1.245v.622h-.623v.623h-.622V6.868h-.623v6.225h.623v.623h2.49v-.623h.622V6.868h-.622zm9.34 0h-1.246v.623h-.623v1.245h-.622v.622h-.623v-.622h-.622V6.868h-.623v-.623h-2.49v.623h1.245v.622h-.622v.623h-.623V6.868h-.623v6.225h.623v.623h2.49v-.623h.623v-2.49h.622v.623h.623v-.623h.622v2.49h.623v.623h1.245v-.623h.623V6.868h-.623zm4.984 0h-2.49v.623H48.6v.622h-.622v.623h-.623V6.868h-.622v6.225h.622v.623h2.49v-.623h.623V6.868h-.623zm8.717.623v-.623h-6.225v.623h1.245v.622h-.623v.623h-.622v.622h2.49v.623h-.623v.622h-.622v.623h-.623v.623h-.622v.622h-.623v1.245h.623v.623h6.225v-.623h.623v-1.867h-.623v-.623h-1.867V9.98h.622v-.622h.622v-.623h.623v-.622h.623V6.868zm-6.225 0h-.623v1.245h.623zm14.948 0h-.623v-.623h-4.98v.623h.623v.622h-.623v.623h-.622V7.49h-.623v4.98h.623v.623h.622v.623h4.98v-.623h.623v-.622h.622V7.49h-.622zm-1.245 4.358h-1.868V8.113h1.868zm9.968-4.358h-.623v-.623h-5.603v.623h1.245v.622h-.622v.623h-.623V6.868h-.622v6.225h.622v.623h2.49v-.623h.623v-1.867h.623v.622h.622v.623h.623v.622h.622v.623h.623v-.623h.622v-1.867h-.622v-.623h-.623V9.98h.623v-.622h.622V7.49h-.622zm-3.113 1.868v-.623h1.868v.622zm-40.187 7.19H25.86v.622h.622v.623h-.622v.622h-.623v-.622h-.622v6.225h.622v.623h.623v.622h6.848v-.622h.623v-1.245h-.623v-.623h-3.736v-4.358h3.736v-.622h.623v-.623h-.623zm8.095 6.225h-2.49v-4.358h-.623v-.622H35.2v.622h1.246v.623h-.623v.622H35.2v-1.245h-.622v6.226h.622v.622h5.603v-.622h.623v-1.245h-.623zm8.725-4.98h-1.245v.622h-.622v4.358h-1.245v-4.358h-.623v-.622h-2.49v.622h1.245v.623h-.622v.623h-.623v-1.246h-.622v5.603h.622v.623h.623v.622h4.98v-.622h.622v-.623h.623v-5.603h-.623zm8.723.622h-.622v-.622h-5.603v.622h1.245v.623h-.623v.623h-.622v-1.246h-.622v6.226h.622v.622h5.603v-.622h.622v-.623h.623v-2.49h-.623v-.622h.623v-1.868h-.623zm-1.245 4.358H55.14v-.622h1.867zm-1.867-2.49v-.622h1.867v.622z" style="fill:#666"/>'
            "</svg>"
        );
        string memory expected = string.concat(
            "data:application/json;base64,",
            Base64.encode(
                bytes(
                    string.concat(
                        "{",
                        '"name":"Optimizor Club"',
                        '"description":"The Optimizor Club NFT collection rewards gas efficient people and machines by minting new items whenever a cheaper solution is submitted for a certain challenge."',
                        '"image":"',
                        logo,
                        '"',
                        '"external_link":"https://optimizor.club/"',
                        "}"
                    )
                )
            )
        );
        assertEq(opt.contractURI(), expected);
    }

    function testCheapSqrt() public {
        addSqrtChallenge();

        testChallenger(SQRT_ID, address(cheapSqrt), address(cheapSqrt).codehash);
    }

    function testExpensiveSqrt() public {
        addSqrtChallenge();

        testChallenger(SQRT_ID, address(expSqrt), address(expSqrt).codehash);
    }

    function testCheapExpensiveSqrt() public {
        addSqrtChallenge();

        testChallengers(
            SQRT_ID, address(expSqrt), address(expSqrt).codehash, address(cheapSqrt), address(cheapSqrt).codehash
        );
    }

    function testCheapSum() public {
        addSumChallenge();

        testChallenger(SUM_ID, address(cheapSum), address(cheapSum).codehash);
    }

    function testExpensiveSum() public {
        addSumChallenge();

        testChallenger(SUM_ID, address(expSum), address(expSum).codehash);
    }

    function testCheapExpensiveSum() public {
        addSumChallenge();

        testChallengers(
            SUM_ID, address(expSum), address(expSum).codehash, address(cheapSum), address(cheapSum).codehash
        );
    }

    function testCheapSqrtNFT() public {
        addSqrtChallenge();

        testChallenger(SQRT_ID, address(cheapSqrt), address(cheapSqrt).codehash);
    }

    function testChallengers(
        uint256 CHL_ID,
        address challenger_0,
        bytes32 chl_hash_0,
        address challenger_1,
        bytes32 chl_hash_1
    ) internal {
        address other = address(42);
        vm.prank(other);
        opt.commit(computeKey(other, chl_hash_0, SALT));
        vm.stopPrank();

        opt.commit(computeKey(address(this), chl_hash_1, SALT));

        advancePeriod();

        (, uint32 preSolutionId) = opt.challenges(CHL_ID);

        vm.prank(other);
        opt.challenge(CHL_ID, challenger_0, other, SALT);
        vm.stopPrank();

        (, uint32 postSolutionId) = opt.challenges(CHL_ID);
        (, address postOpt,) = opt.extraDetails(packTokenId(CHL_ID, postSolutionId));
        assertEq(postOpt, other);
        assertEq(postSolutionId, preSolutionId + 1);

        uint256 tokenId = (CHL_ID << 32) | postSolutionId;
        assertEq(opt.ownerOf(tokenId), other);

        address[] memory leaders = opt.leaderboard(tokenId);
        assertEq(leaders.length, 1);
        assertEq(leaders[0], other);

        opt.challenge(CHL_ID, challenger_1, address(this), SALT);
        (, uint32 postSolutionId2) = opt.challenges(CHL_ID);
        (, address postOpt2,) = opt.extraDetails(packTokenId(CHL_ID, postSolutionId2));
        assertEq(postOpt2, address(this));
        assertEq(postSolutionId2, postSolutionId + 1);

        uint256 tokenId2 = (CHL_ID << 32) | postSolutionId2;
        assertEq(opt.ownerOf(tokenId2), address(this));

        vm.prank(other);
        vm.expectRevert(Optimizor.NotOptimizor.selector);
        opt.challenge(CHL_ID, challenger_0, other, SALT);
        vm.stopPrank();

        address[] memory leaders2 = opt.leaderboard(tokenId2);
        assertEq(leaders2.length, 2);
        assertEq(leaders2[0], other);
        assertEq(leaders2[1], address(this));
    }

    function testChallenger(uint256 CHL_ID, address challenger, bytes32 chl_hash) internal {
        opt.commit(computeKey(address(this), chl_hash, SALT));
        advancePeriod();

        (, uint32 preSolutionId) = opt.challenges(CHL_ID);
        address[] memory preLeaders = opt.leaderboard((CHL_ID << 32) | preSolutionId);

        opt.challenge(CHL_ID, challenger, address(this), SALT);
        (, uint32 postSolutionId) = opt.challenges(CHL_ID);
        (, address postOpt,) = opt.extraDetails(packTokenId(CHL_ID, postSolutionId));
        assertEq(postOpt, address(this));
        assertEq(postSolutionId, preSolutionId + 1);

        uint256 tokenId = (CHL_ID << 32) | postSolutionId;
        assertEq(opt.ownerOf(tokenId), address(this));

        address[] memory leaders = opt.leaderboard(tokenId);
        assertEq(leaders.length, preLeaders.length + 1);
        assertEq(leaders[leaders.length - 1], address(this));
    }

    function testInvalidTokenURIs() public {
        addSumChallenge();
        vm.expectRevert(abi.encodeWithSelector(OptimizorNFT.InvalidSolutionId.selector, 0, 0));
        opt.tokenURI(0);
        vm.expectRevert(abi.encodeWithSelector(OptimizorNFT.InvalidSolutionId.selector, 0, 10));
        opt.tokenURI(10);
    }

    function testInvalidChallengeTokenURIs() public {
        vm.expectRevert(abi.encodeWithSelector(OptimizorNFT.ChallengeNotFound.selector, 100));
        opt.tokenURI((100 << 32) + 1);
    }

    function testTokenTransferDetailsAndURIs() public {
        addSqrtChallenge();

        testChallenger(SQRT_ID, address(expSqrt), address(expSqrt).codehash);

        testChallenger(SQRT_ID, address(cheapSqrt), address(cheapSqrt).codehash);

        uint256 tokenId = (SQRT_ID << 32) | 2;
        TokenDetails memory expectedTokenDetails = TokenDetails({
            challengeId: SQRT_ID,
            challenge: IChallenge(0xf5a2fE45F4f1308502b1C136b9EF8af136141382),
            leaderGas: 139072,
            leaderSolutionId: 2,
            leaderSolver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
            leaderOwner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
            leaderSubmission: 0x1DD17af470f2CAa13D29c02AC190a3a1EdDc4e84,
            gas: 139072,
            solutionId: 2,
            rank: 1,
            improvementPercentage: 50,
            solver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
            owner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
            submission: 0x1DD17af470f2CAa13D29c02AC190a3a1EdDc4e84
        });

        assertEq(abi.encode(opt.tokenDetails(tokenId)), abi.encode(expectedTokenDetails));

        address to = address(0xcafe);
        opt.transferFrom(address(this), to, tokenId);

        expectedTokenDetails.leaderOwner = to;
        expectedTokenDetails.owner = to;

        assertEq(abi.encode(opt.tokenDetails(tokenId)), abi.encode(expectedTokenDetails));

        assertEq(
            opt.tokenURI(tokenId),
            "data:application/json;base64,"
        );
    }

    function testTokenDetailsAndURIs() public {
        addSqrtChallenge();

        ISqrt expSqrt2 = new ExpensiveSqrt2();
        ISqrt expSqrt3 = new ExpensiveSqrt3();

        testChallenger(SQRT_ID, address(expSqrt3), address(expSqrt3).codehash);

        testChallenger(SQRT_ID, address(expSqrt2), address(expSqrt2).codehash);

        testChallenger(SQRT_ID, address(expSqrt), address(expSqrt).codehash);

        testChallenger(SQRT_ID, address(cheapSqrt), address(cheapSqrt).codehash);

        assertEq(
            abi.encode(opt.tokenDetails((SQRT_ID << 32) | 1)),
            abi.encode(
                TokenDetails({
                    challengeId: SQRT_ID,
                    challenge: IChallenge(0xf5a2fE45F4f1308502b1C136b9EF8af136141382),
                    leaderGas: 139072,
                    leaderSolutionId: 4,
                    leaderSolver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    leaderOwner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    leaderSubmission: 0x1DD17af470f2CAa13D29c02AC190a3a1EdDc4e84,
                    gas: 542794,
                    solutionId: 1,
                    rank: 4,
                    improvementPercentage: 0,
                    solver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    owner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    submission: 0xdC0505A4c93647CD736E4bE24FBb171472bBFb10
                })
            )
        );

        assertEq(
            abi.encode(opt.tokenDetails((SQRT_ID << 32) | 2)),
            abi.encode(
                TokenDetails({
                    challengeId: SQRT_ID,
                    challenge: IChallenge(0xf5a2fE45F4f1308502b1C136b9EF8af136141382),
                    leaderGas: 139072,
                    leaderSolutionId: 4,
                    leaderSolver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    leaderOwner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    leaderSubmission: 0x1DD17af470f2CAa13D29c02AC190a3a1EdDc4e84,
                    gas: 408220,
                    solutionId: 2,
                    rank: 3,
                    improvementPercentage: 75,
                    solver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    owner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    submission: 0xbfFb01bB2DDb4EfA87cB78EeCB8115AFAe6d2032
                })
            )
        );

        assertEq(
            abi.encode(opt.tokenDetails((SQRT_ID << 32) | 3)),
            abi.encode(
                TokenDetails({
                    challengeId: SQRT_ID,
                    challenge: IChallenge(0xf5a2fE45F4f1308502b1C136b9EF8af136141382),
                    leaderGas: 139072,
                    leaderSolutionId: 4,
                    leaderSolver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    leaderOwner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    leaderSubmission: 0x1DD17af470f2CAa13D29c02AC190a3a1EdDc4e84,
                    gas: 273646,
                    solutionId: 3,
                    rank: 2,
                    improvementPercentage: 67,
                    solver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    owner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    submission: 0x3A1148FE01e3c4721D93fe8A36c2b5C29109B6ae
                })
            )
        );

        assertEq(
            abi.encode(opt.tokenDetails((SQRT_ID << 32) | 4)),
            abi.encode(
                TokenDetails({
                    challengeId: SQRT_ID,
                    challenge: IChallenge(0xf5a2fE45F4f1308502b1C136b9EF8af136141382),
                    leaderGas: 139072,
                    leaderSolutionId: 4,
                    leaderSolver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    leaderOwner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    leaderSubmission: 0x1DD17af470f2CAa13D29c02AC190a3a1EdDc4e84,
                    gas: 139072,
                    solutionId: 4,
                    rank: 1,
                    improvementPercentage: 50,
                    solver: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    owner: 0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84,
                    submission: 0x1DD17af470f2CAa13D29c02AC190a3a1EdDc4e84
                })
            )
        );

        assertEq(
            opt.tokenURI((SQRT_ID << 32) | 1),
            "data:application/json;base64,"
        );
        assertEq(
            opt.tokenURI((SQRT_ID << 32) | 2),
            "data:application/json;base64,"
        );
        assertEq(
            opt.tokenURI((SQRT_ID << 32) | 3),
            "data:application/json;base64,eyJuYW1lIjoiT3B0aW1pem9yIENsdWI6IFNRUlQiLCJkZXNjcmlwdGlvbiI6IkNhbGN1bGF0aW5nIHRoZSBzcXVhcmUgcm9vdCBvZiBhbiBhcnJheSBvZiBGaXhlZDE4IG51bWJlcnNcbkxlYWRlcmJvYXJkOlxuMS4gMHhiNGM3OWRhYjhmMjU5YzdhZWU2ZTViMmFhNzI5ODIxODY0MjI3ZTg0XG4yLiAweGI0Yzc5ZGFiOGYyNTljN2FlZTZlNWIyYWE3Mjk4MjE4NjQyMjdlODRcbjMuIDB4YjRjNzlkYWI4ZjI1OWM3YWVlNmU1YjJhYTcyOTgyMTg2NDIyN2U4NFxuNC4gMHhiNGM3OWRhYjhmMjU5YzdhZWU2ZTViMmFhNzI5ODIxODY0MjI3ZTg0IiwiYXR0cmlidXRlcyI6W3sidHJhaXRfdHlwZSI6IkNoYWxsZW5nZSIsInZhbHVlIjoiU1FSVCJ9LHsidHJhaXRfdHlwZSI6IkdhcyB1c2VkIiwidmFsdWUiOjI3MzY0NiwiZGlzcGxheV90eXBlIjoibnVtYmVyIn0seyJ0cmFpdF90eXBlIjoiQ29kZSBzaXplIiwidmFsdWUiOjExMjMsImRpc3BsYXlfdHlwZSI6Im51bWJlciJ9LHsidHJhaXRfdHlwZSI6IkltcHJvdmVtZW50IHBlcmNlbnRhZ2UiLCJ2YWx1ZSI6IjY3JSJ9LHsidHJhaXRfdHlwZSI6IlNvbHZlciIsInZhbHVlIjoiMHhiNGM3OWRhYjhmMjU5YzdhZWU2ZTViMmFhNzI5ODIxODY0MjI3ZTg0In0seyJ0cmFpdF90eXBlIjoiUmFuayIsInZhbHVlIjoyLCJtYXhfdmFsdWUiOjR9LHsidHJhaXRfdHlwZSI6IkxlYWRlciIsInZhbHVlIjoiTm8ifSx7InRyYWl0X3R5cGUiOiJUb3AgMyIsInZhbHVlIjoiWWVzIn0seyJ0cmFpdF90eXBlIjoiVG9wIDEwIiwidmFsdWUiOiJZZXMifV0sImltYWdlIjoiZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlCM2FXUjBhRDBpTWprd0lpQm9aV2xuYUhROUlqVXdNQ0lnZG1sbGQwSnZlRDBpTUNBd0lESTVNQ0ExTURBaUlIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJZ2VHMXNibk02ZUd4cGJtczlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNpUGp4a1pXWnpQanhtYVd4MFpYSWdhV1E5SW1samIyNGlQanhtWlVsdFlXZGxJSEpsYzNWc2REMGlhV052YmlJZ2VHeHBibXM2YUhKbFpqMGlaR0YwWVRwcGJXRm5aUzl6ZG1jcmVHMXNPMkpoYzJVMk5DeFFTRTR5V25sQ00yRlhVakJoUkRCcFRWUlpNa3hxVlRWT2VVbG5ZVWRXY0ZveWFEQlFVMGw0VFdwbmRVOVVVWGhKYVVJeVlWZFdNMUZ0T1RSUVUwbDNTVVJCWjA1RVVYVk5SR00xU1VSTk1FeHFSWGhPYVVsblpVY3hjMkp1VFRsSmJXZ3daRWhCTmt4NU9UTmtNMk4xWkhwTmRXSXpTbTVNZWtsM1RVUkJkbU16V201SmFqUTRZMGRHTUdGRFFtdFFVMHBPVFdwQmRVNTZhM3BKUkVWNlRHcE5lVTFYWjNSTWFsbDVUVEZaZUUxcE5ETmhRekF5VEdwSmVVNVlXWFZPYWtsNVlVTTBNazFxU2pKTWFsbDVUVEpuZEV4cVdYbE5ibGwxVG1wSmVXRkRNSFZPYWtsNlpHa3dkVTVxU1hsVFJFVjVUR3BrTWs1cE5IbE5hbFp2VEdwWmVVMXVXWFZPYWtsNllVTTBNazFxVGpKTWFsbDVUVzFuTWt4cVNYbE9XRmwwVEdwWmVVMXRaM1ZPYWtsNlpHa3dkVTVxU1hwaFF6UXlUV3BLTWt4VVdYVk5ha2t4WVVNd2RVNXFTWGxsYlRCMFRYazBNMDE2VldkT1V6UXlUVVJPTWt4VVVYVk5lbFUwWVVSRmRVOUVXVE5rYWxGMVRYcFZOR1Z0TUhoTmVUUXlUMVJuZEU1cE5IbE5hbFp2VEZSWmRVOUVVVFJrYVRReVRXcEtiMHhxV1hsTk0xbDFUbXBKZW1GRE1IVk9ha2w2WkdrME1rMXFTbTlNVXpReVRXcEtNa3hUTkRKTmFrcHZURk0wTWsxcVRqSk9hVFI1VFdwV2IweHFXWGxOTTFsMVRtcEplbUZETkRKTmFrb3lUR3BaZVUxdFp6Sk1hbWN3VDBoWmRFeHFXWGxOYldkMVRtcEplV1JwTUhoTWFra3dUbGRuZEV4cVdYbE5ibGwwVEdwWmVVMHdaM2xPZVRSM1RXNVpkRTVETkhwT1ZHaHZUWGswTTAxNlZqSk1VelF5VFdwS2IweHFXWGxOYmxsMFRHcFplVTB5WjNSTWFsbDVUVzV2YVVsSVRqQmxWM2hzVUZOS2JXRlhlSE5QYVUweVRtcFphVXg2TkRoTU0wNHlXbm8wUFNJdlBqd3ZabWxzZEdWeVBqeG1hV3gwWlhJZ2FXUTlJbVl4SWo0OFptVkpiV0ZuWlNCeVpYTjFiSFE5SW5Bd0lpQjRiR2x1YXpwb2NtVm1QU0prWVhSaE9tbHRZV2RsTDNOMlp5dDRiV3c3WW1GelpUWTBMRkJJVGpKYWVVSXpZVmRTTUdGRU1HNU5hbXQzU25sQ2IxcFhiRzVoU0ZFNVNucFZkMDFEWTJka2JXeHNaREJLZG1WRU1HNU5RMEYzU1VSSk5VMURRVEZOUkVGdVNVaG9kR0pITlhwUVUyUnZaRWhTZDA5cE9IWmtNMlF6VEc1amVreHRPWGxhZVRoNVRVUkJkMHd6VGpKYWVXTXJVRWhLYkZrelVXZGtNbXhyWkVkbk9VcDZTVFZOU0VJMFNubENiMXBYYkc1aFNGRTVTbnBWZDAxSVFqUktlVUp0WVZkNGMxQlRZMnBOUkVGM1RVUkJkMHA1T0N0UVF6bDZaRzFqS3lJdlBqeG1aVWx0WVdkbElISmxjM1ZzZEQwaWNERWlJSGhzYVc1ck9taHlaV1k5SW1SaGRHRTZhVzFoWjJVdmMzWm5LM2h0YkR0aVlYTmxOalFzVUVoT01scDVRak5oVjFJd1lVUXdiazFxYTNkS2VVSnZXbGRzYm1GSVVUbEtlbFYzVFVOaloyUnRiR3hrTUVwMlpVUXdiazFEUVhkSlJFazFUVU5CTVUxRVFXNUpTR2gwWWtjMWVsQlRaRzlrU0ZKM1QyazRkbVF6WkROTWJtTjZURzA1ZVZwNU9IbE5SRUYzVEROT01scDVZeXRRUjA1d1kyMU9jMXBUUW1wbFJEQnVUVlJWTTBwNVFtcGxWREJ1VGtSVk5FcDVRbmxRVTJONFRXcENkMlZEWTJkYWJXeHpZa1F3YmtsNlFYZE5SRUYzVFVOamRsQnFkM1pqTTFwdVVHYzlQU0l2UGp4bVpVbHRZV2RsSUhKbGMzVnNkRDBpY0RJaUlIaHNhVzVyT21oeVpXWTlJbVJoZEdFNmFXMWhaMlV2YzNabkszaHRiRHRpWVhObE5qUXNVRWhPTWxwNVFqTmhWMUl3WVVRd2JrMXFhM2RLZVVKdldsZHNibUZJVVRsS2VsVjNUVU5qWjJSdGJHeGtNRXAyWlVRd2JrMURRWGRKUkVrMVRVTkJNVTFFUVc1SlNHaDBZa2MxZWxCVFpHOWtTRkozVDJrNGRtUXpaRE5NYm1ONlRHMDVlVnA1T0hsTlJFRjNURE5PTWxwNVl5dFFSMDV3WTIxT2MxcFRRbXBsUkRCdVRWUmpNRXA1UW1wbFZEQnVUWHBWZVVwNVFubFFVMk40VFdwQ2QyVkRZMmRhYld4ellrUXdia2w2UVhkTlJFRjNUVU5qZGxCcWQzWmpNMXB1VUdjOVBTSWdMejQ4Wm1WSmJXRm5aU0J5WlhOMWJIUTlJbkF6SWlCNGJHbHVhenBvY21WbVBTSmtZWFJoT21sdFlXZGxMM04yWnl0NGJXdzdZbUZ6WlRZMExGQklUakphZVVJellWZFNNR0ZFTUc1TmFtdDNTbmxDYjFwWGJHNWhTRkU1U25wVmQwMURZMmRrYld4c1pEQktkbVZFTUc1TlEwRjNTVVJKTlUxRFFURk5SRUZ1U1Vob2RHSkhOWHBRVTJSdlpFaFNkMDlwT0haa00yUXpURzVqZWt4dE9YbGFlVGg1VFVSQmQwd3pUakphZVdNclVFZE9jR050VG5OYVUwSnFaVVF3YmsxVVdYZEtlVUpxWlZRd2JrMVVVVFJLZVVKNVVGTmplRTFFUW5kbFEyTm5XbTFzYzJKRU1HNUpla0YzVFVSQmQwMURZM1pRYW5kMll6TmFibEJuUFQwaUx6NDhabVZDYkdWdVpDQnRiMlJsUFNKdmRtVnliR0Y1SWlCcGJqMGljREFpSUdsdU1qMGljREVpTHo0OFptVkNiR1Z1WkNCdGIyUmxQU0psZUdOc2RYTnBiMjRpSUdsdU1qMGljRElpTHo0OFptVkNiR1Z1WkNCdGIyUmxQU0p2ZG1WeWJHRjVJaUJwYmpJOUluQXpJaUJ5WlhOMWJIUTlJbUpzWlc1a1QzVjBJaTgrUEdabFIyRjFjM05wWVc1Q2JIVnlJR2x1UFNKaWJHVnVaRTkxZENJZ2MzUmtSR1YyYVdGMGFXOXVQU0kwTWlJdlBqd3ZabWxzZEdWeVBqeGpiR2x3VUdGMGFDQnBaRDBpWTI5eWJtVnljeUkrUEhKbFkzUWdkMmxrZEdnOUlqSTVNQ0lnYUdWcFoyaDBQU0kxTURBaUlISjRQU0kwTWlJZ2NuazlJalF5SWk4K1BDOWpiR2x3VUdGMGFENDhjR0YwYUNCcFpEMGlkR1Y0ZEMxd1lYUm9MV0VpSUdROUlrMDBNQ0F4TWlCSU1qVXdJRUV5T0NBeU9DQXdJREFnTVNBeU56Z2dOREFnVmpRMk1DQkJNamdnTWpnZ01DQXdJREVnTWpVd0lEUTRPQ0JJTkRBZ1FUSTRJREk0SURBZ01DQXhJREV5SURRMk1DQldOREFnUVRJNElESTRJREFnTUNBeElEUXdJREV5SUhvaUx6NDhjR0YwYUNCcFpEMGliV2x1YVcxaGNDSWdaRDBpVFRJek5DQTBORFJETWpNMElEUTFOeTQ1TkRrZ01qUXlMakl4SURRMk15QXlOVE1nTkRZeklpOCtQR1pwYkhSbGNpQnBaRDBpZEc5d0xYSmxaMmx2YmkxaWJIVnlJajQ4Wm1WSFlYVnpjMmxoYmtKc2RYSWdhVzQ5SWxOdmRYSmpaVWR5WVhCb2FXTWlJSE4wWkVSbGRtbGhkR2x2YmowaU1qUWlMejQ4TDJacGJIUmxjajQ4YkdsdVpXRnlSM0poWkdsbGJuUWdhV1E5SW1keVlXUXRkWEFpSUhneFBTSXhJaUI0TWowaU1DSWdlVEU5SWpFaUlIa3lQU0l3SWo0OGMzUnZjQ0J2Wm1aelpYUTlJakF1TUNJZ2MzUnZjQzFqYjJ4dmNqMGlJMlptWmlJZ2MzUnZjQzF2Y0dGamFYUjVQU0l4SWk4K1BITjBiM0FnYjJabWMyVjBQU0l1T1NJZ2MzUnZjQzFqYjJ4dmNqMGlJMlptWmlJZ2MzUnZjQzF2Y0dGamFYUjVQU0l3SWk4K1BDOXNhVzVsWVhKSGNtRmthV1Z1ZEQ0OGJHbHVaV0Z5UjNKaFpHbGxiblFnYVdROUltZHlZV1F0Wkc5M2JpSWdlREU5SWpBaUlIZ3lQU0l4SWlCNU1UMGlNQ0lnZVRJOUlqRWlQanh6ZEc5d0lHOW1abk5sZEQwaU1DNHdJaUJ6ZEc5d0xXTnZiRzl5UFNJalptWm1JaUJ6ZEc5d0xXOXdZV05wZEhrOUlqRWlMejQ4YzNSdmNDQnZabVp6WlhROUlqQXVPU0lnYzNSdmNDMWpiMnh2Y2owaUkyWm1aaUlnYzNSdmNDMXZjR0ZqYVhSNVBTSXdJaTgrUEM5c2FXNWxZWEpIY21Ga2FXVnVkRDQ4YldGemF5QnBaRDBpWm1Ga1pTMTFjQ0lnYldGemEwTnZiblJsYm5SVmJtbDBjejBpYjJKcVpXTjBRbTkxYm1ScGJtZENiM2dpUGp4eVpXTjBJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUdacGJHdzlJblZ5YkNnalozSmhaQzExY0NraUx6NDhMMjFoYzJzK1BHMWhjMnNnYVdROUltWmhaR1V0Wkc5M2JpSWdiV0Z6YTBOdmJuUmxiblJWYm1sMGN6MGliMkpxWldOMFFtOTFibVJwYm1kQ2IzZ2lQanh5WldOMElIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJR1pwYkd3OUluVnliQ2dqWjNKaFpDMWtiM2R1S1NJdlBqd3ZiV0Z6YXo0OGJXRnpheUJwWkQwaWJtOXVaU0lnYldGemEwTnZiblJsYm5SVmJtbDBjejBpYjJKcVpXTjBRbTkxYm1ScGJtZENiM2dpUGp4eVpXTjBJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUdacGJHdzlJaU5tWm1ZaUx6NDhMMjFoYzJzK1BHeHBibVZoY2tkeVlXUnBaVzUwSUdsa1BTSm5jbUZrTFhONWJXSnZiQ0krUEhOMGIzQWdiMlptYzJWMFBTSXdMamNpSUhOMGIzQXRZMjlzYjNJOUlpTm1abVlpSUhOMGIzQXRiM0JoWTJsMGVUMGlNU0l2UGp4emRHOXdJRzltWm5ObGREMGlMamsxSWlCemRHOXdMV052Ykc5eVBTSWpabVptSWlCemRHOXdMVzl3WVdOcGRIazlJakFpTHo0OEwyeHBibVZoY2tkeVlXUnBaVzUwUGp4dFlYTnJJR2xrUFNKbVlXUmxMWE41YldKdmJDSWdiV0Z6YTBOdmJuUmxiblJWYm1sMGN6MGlkWE5sY2xOd1lXTmxUMjVWYzJVaVBqeHlaV04wSUhkcFpIUm9QU0l5T1RCd2VDSWdhR1ZwWjJoMFBTSXlNREJ3ZUNJZ1ptbHNiRDBpZFhKc0tDTm5jbUZrTFhONWJXSnZiQ2tpTHo0OEwyMWhjMnMrUEM5a1pXWnpQanhuSUdOc2FYQXRjR0YwYUQwaWRYSnNLQ05qYjNKdVpYSnpLU0krUEhKbFkzUWdabWxzYkQwaU1EQXdNREF3SWlCNFBTSXdjSGdpSUhrOUlqQndlQ0lnZDJsa2RHZzlJakk1TUhCNElpQm9aV2xuYUhROUlqVXdNSEI0SWk4K1BISmxZM1FnYzNSNWJHVTlJbVpwYkhSbGNqb2dkWEpzS0NObU1Ta2lJSGc5SWpCd2VDSWdlVDBpTUhCNElpQjNhV1IwYUQwaU1qa3djSGdpSUdobGFXZG9kRDBpTlRBd2NIZ2lMejQ4WnlCemRIbHNaVDBpWm1sc2RHVnlPblZ5YkNnamRHOXdMWEpsWjJsdmJpMWliSFZ5S1RzZ2RISmhibk5tYjNKdE9uTmpZV3hsS0RFdU5TazdJSFJ5WVc1elptOXliUzF2Y21sbmFXNDZZMlZ1ZEdWeUlIUnZjRHNpUGp4eVpXTjBJR1pwYkd3OUltNXZibVVpSUhnOUlqQndlQ0lnZVQwaU1IQjRJaUIzYVdSMGFEMGlNamt3Y0hnaUlHaGxhV2RvZEQwaU5UQXdjSGdpTHo0OFpXeHNhWEJ6WlNCamVEMGlOVEFsSWlCamVUMGlNSEI0SWlCeWVEMGlNVGd3Y0hnaUlISjVQU0l4TWpCd2VDSWdabWxzYkQwaUl6QXdNQ0lnYjNCaFkybDBlVDBpTUM0NE5TSXZQand2Wno0OGNtVmpkQ0I0UFNJd0lpQjVQU0l3SWlCM2FXUjBhRDBpTWprd0lpQm9aV2xuYUhROUlqVXdNQ0lnY25nOUlqUXlJaUJ5ZVQwaU5ESWlJR1pwYkd3OUluSm5ZbUVvTUN3d0xEQXNNQ2tpSUhOMGNtOXJaVDBpY21kaVlTZ3lOVFVzTWpVMUxESTFOU3d3TGpJcElpOCtQQzluUGp4MFpYaDBJSFJsZUhRdGNtVnVaR1Z5YVc1blBTSnZjSFJwYldsNlpWTndaV1ZrSWo0OGRHVjRkRkJoZEdnZ2MzUmhjblJQWm1aelpYUTlJaTB4TURBbElpQm1hV3hzUFNJalptWm1JaUJtYjI1MExXWmhiV2xzZVQwaUowTnZkWEpwWlhJZ1RtVjNKeXdnYlc5dWIzTndZV05sSWlCbWIyNTBMWE5wZW1VOUlqRXdjSGdpSUhoc2FXNXJPbWh5WldZOUlpTjBaWGgwTFhCaGRHZ3RZU0krVTFGU1ZDRGlnS0lnTUhobU5XRXlabVUwTldZMFpqRXpNRGcxTURKaU1XTXhNelppT1dWbU9HRm1NVE0yTVRReE16Z3lQR0Z1YVcxaGRHVWdZV1JrYVhScGRtVTlJbk4xYlNJZ1lYUjBjbWxpZFhSbFRtRnRaVDBpYzNSaGNuUlBabVp6WlhRaUlHWnliMjA5SWpBbElpQjBiejBpTVRBd0pTSWdZbVZuYVc0OUlqQnpJaUJrZFhJOUlqTXdjeUlnY21Wd1pXRjBRMjkxYm5ROUltbHVaR1ZtYVc1cGRHVWlMejQ4TDNSbGVIUlFZWFJvUGlBOGRHVjRkRkJoZEdnZ2MzUmhjblJQWm1aelpYUTlJakFsSWlCbWFXeHNQU0lqWm1abUlpQm1iMjUwTFdaaGJXbHNlVDBpSjBOdmRYSnBaWElnVG1WM0p5d2diVzl1YjNOd1lXTmxJaUJtYjI1MExYTnBlbVU5SWpFd2NIZ2lJSGhzYVc1ck9taHlaV1k5SWlOMFpYaDBMWEJoZEdndFlTSStVMUZTVkNEaWdLSWdNSGhtTldFeVptVTBOV1kwWmpFek1EZzFNREppTVdNeE16WmlPV1ZtT0dGbU1UTTJNVFF4TXpneVBHRnVhVzFoZEdVZ1lXUmthWFJwZG1VOUluTjFiU0lnWVhSMGNtbGlkWFJsVG1GdFpUMGljM1JoY25SUFptWnpaWFFpSUdaeWIyMDlJakFsSWlCMGJ6MGlNVEF3SlNJZ1ltVm5hVzQ5SWpCeklpQmtkWEk5SWpNd2N5SWdjbVZ3WldGMFEyOTFiblE5SW1sdVpHVm1hVzVwZEdVaUx6NDhMM1JsZUhSUVlYUm9QangwWlhoMFVHRjBhQ0J6ZEdGeWRFOW1abk5sZEQwaU5UQWxJaUJtYVd4c1BTSWpabVptSWlCbWIyNTBMV1poYldsc2VUMGlKME52ZFhKcFpYSWdUbVYzSnl3Z2JXOXViM053WVdObElpQm1iMjUwTFhOcGVtVTlJakV3Y0hnaUlIaHNhVzVyT21oeVpXWTlJaU4wWlhoMExYQmhkR2d0WVNJK1QzQjBhVzFwZW05eUlFTnNkV0lnNG9DaUlEQjRZalJqTnpsa1lXSTRaakkxT1dNM1lXVmxObVUxWWpKaFlUY3lPVGd5TVRnMk5ESXlOMlU0TkR4aGJtbHRZWFJsSUdGa1pHbDBhWFpsUFNKemRXMGlJR0YwZEhKcFluVjBaVTVoYldVOUluTjBZWEowVDJabWMyVjBJaUJtY205dFBTSXdKU0lnZEc4OUlqRXdNQ1VpSUdKbFoybHVQU0l3Y3lJZ1pIVnlQU0l6TUhNaUlISmxjR1ZoZEVOdmRXNTBQU0pwYm1SbFptbHVhWFJsSWk4K1BDOTBaWGgwVUdGMGFENDhkR1Y0ZEZCaGRHZ2djM1JoY25SUFptWnpaWFE5SWkwMU1DVWlJR1pwYkd3OUlpTm1abVlpSUdadmJuUXRabUZ0YVd4NVBTSW5RMjkxY21sbGNpQk9aWGNuTENCdGIyNXZjM0JoWTJVaUlHWnZiblF0YzJsNlpUMGlNVEJ3ZUNJZ2VHeHBibXM2YUhKbFpqMGlJM1JsZUhRdGNHRjBhQzFoSWo1UGNIUnBiV2w2YjNJZ1EyeDFZaURpZ0tJZ01IaGlOR00zT1dSaFlqaG1NalU1WXpkaFpXVTJaVFZpTW1GaE56STVPREl4T0RZME1qSTNaVGcwUEdGdWFXMWhkR1VnWVdSa2FYUnBkbVU5SW5OMWJTSWdZWFIwY21saWRYUmxUbUZ0WlQwaWMzUmhjblJQWm1aelpYUWlJR1p5YjIwOUlqQWxJaUIwYnowaU1UQXdKU0lnWW1WbmFXNDlJakJ6SWlCa2RYSTlJak13Y3lJZ2NtVndaV0YwUTI5MWJuUTlJbWx1WkdWbWFXNXBkR1VpTHo0OEwzUmxlSFJRWVhSb1Bqd3ZkR1Y0ZEQ0OFp5QnRZWE5yUFNKMWNtd29JMlpoWkdVdGMzbHRZbTlzS1NJK1BISmxZM1FnWm1sc2JEMGlibTl1WlNJZ2VEMGlNSEI0SWlCNVBTSXdjSGdpSUhkcFpIUm9QU0l5T1RCd2VDSWdhR1ZwWjJoMFBTSXlNREJ3ZUNJdlBqeDBaWGgwSUhrOUlqY3djSGdpSUhnOUlqTXljSGdpSUdacGJHdzlJaU5tWm1ZaUlHWnZiblF0Wm1GdGFXeDVQU0luUTI5MWNtbGxjaUJPWlhjbkxDQnRiMjV2YzNCaFkyVWlJR1p2Ym5RdGQyVnBaMmgwUFNJeU1EQWlJR1p2Ym5RdGMybDZaVDBpTXpad2VDSStVMUZTVkR3dmRHVjRkRDQ4ZEdWNGRDQjVQU0l4TVRWd2VDSWdlRDBpTXpKd2VDSWdabWxzYkQwaUkyWm1aaUlnWm05dWRDMW1ZVzFwYkhrOUlpZERiM1Z5YVdWeUlFNWxkeWNzSUcxdmJtOXpjR0ZqWlNJZ1ptOXVkQzEzWldsbmFIUTlJakl3TUNJZ1ptOXVkQzF6YVhwbFBTSXlNSEI0SWo1U1lXNXJJQ015THpROEwzUmxlSFErUEM5blBqeHlaV04wSUhnOUlqRTJJaUI1UFNJeE5pSWdkMmxrZEdnOUlqSTFPQ0lnYUdWcFoyaDBQU0kwTmpnaUlISjRQU0l5TmlJZ2NuazlJakkySWlCbWFXeHNQU0p5WjJKaEtEQXNNQ3d3TERBcElpQnpkSEp2YTJVOUluSm5ZbUVvTWpVMUxESTFOU3d5TlRVc01TNHdLU0l2UGp4bklHMWhjMnM5SW5WeWJDZ2pibTl1WlNraUlITjBlV3hsUFNKMGNtRnVjMlp2Y20wNmRISmhibk5zWVhSbEtETXdjSGdzTVRNd2NIZ3BJajQ4Y21WamRDQjNhV1IwYUQwaU1qTXdJaUJvWldsbmFIUTlJakl6TUNJZ2NuZzlJakU0Y0hnaUlISjVQU0l4T0hCNElpQm1hV3hzUFNKeVoySmhLREFzTUN3d0xEQXVNU2tpSUM4K1BIQnZiSGxuYjI0Z2NHOXBiblJ6UFNJeE1UVXNNVEUxSURFME5Dd3hNVFVnTVRRMExERTBOQ0lnWm1sc2JEMGlibTl1WlNJZ2MzUnliMnRsUFNKM2FHbDBaU0lnYzNSeWIydGxMV3hwYm1WcWIybHVQU0p5YjNWdVpDSWdjM1J5YjJ0bExYZHBaSFJvUFNJeUlqNDhZVzVwYldGMFpWUnlZVzV6Wm05eWJTQmhkSFJ5YVdKMWRHVk9ZVzFsUFNKMGNtRnVjMlp2Y20waUlHRjBkSEpwWW5WMFpWUjVjR1U5SWxoTlRDSWdkSGx3WlQwaWNtOTBZWFJsSWlCbWNtOXRQU0l3SURFeE5TQXhNVFVpSUhSdlBTSXpOakFnTVRFMUlERXhOU0lnWkhWeVBTSXhNSE1pSUhKbGNHVmhkRU52ZFc1MFBTSnBibVJsWm1sdWFYUmxJaTgrUEM5d2IyeDVaMjl1UGp4d2IyeDVaMjl1SUhCdmFXNTBjejBpTVRFMUxERXhOU0F4TkRRc01UUTBJREV5TXl3eE5qUWlJR1pwYkd3OUltNXZibVVpSUhOMGNtOXJaVDBpZDJocGRHVWlJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUlITjBjbTlyWlMxM2FXUjBhRDBpTWlJK1BHRnVhVzFoZEdWVWNtRnVjMlp2Y20wZ1lYUjBjbWxpZFhSbFRtRnRaVDBpZEhKaGJuTm1iM0p0SWlCaGRIUnlhV0oxZEdWVWVYQmxQU0pZVFV3aUlIUjVjR1U5SW5KdmRHRjBaU0lnWm5KdmJUMGlNQ0F4TVRVZ01URTFJaUIwYnowaU16WXdJREV4TlNBeE1UVWlJR1IxY2owaU1UQnpJaUJ5WlhCbFlYUkRiM1Z1ZEQwaWFXNWtaV1pwYm1sMFpTSXZQand2Y0c5c2VXZHZiajQ4Y0c5c2VXZHZiaUJ3YjJsdWRITTlJakV4TlN3eE1UVWdNVEl6TERFMk5DQTVOU3d4TmpraUlHWnBiR3c5SW01dmJtVWlJSE4wY205clpUMGlkMmhwZEdVaUlITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpSUhOMGNtOXJaUzEzYVdSMGFEMGlNaUkrUEdGdWFXMWhkR1ZVY21GdWMyWnZjbTBnWVhSMGNtbGlkWFJsVG1GdFpUMGlkSEpoYm5ObWIzSnRJaUJoZEhSeWFXSjFkR1ZVZVhCbFBTSllUVXdpSUhSNWNHVTlJbkp2ZEdGMFpTSWdabkp2YlQwaU1DQXhNVFVnTVRFMUlpQjBiejBpTXpZd0lERXhOU0F4TVRVaUlHUjFjajBpTVRCeklpQnlaWEJsWVhSRGIzVnVkRDBpYVc1a1pXWnBibWwwWlNJdlBqd3ZjRzlzZVdkdmJqNDhMMmMrUEdjZ1ptOXVkQzFtWVcxcGJIazlJaWREYjNWeWFXVnlJRTVsZHljc0lHMXZibTl6Y0dGalpTSWdabTl1ZEMxemFYcGxQU0l4TWlJZ1ptbHNiRDBpSTJabVppSStQR2NnYzNSNWJHVTlJblJ5WVc1elptOXliVHAwY21GdWMyeGhkR1VvTWpsd2VDd2dNemcwY0hncElqNDhjbVZqZENCM2FXUjBhRDBpTVRNemNIZ2lJR2hsYVdkb2REMGlNalp3ZUNJZ2NuZzlJamh3ZUNJZ2NuazlJamh3ZUNJZ1ptbHNiRDBpY21kaVlTZ3dMREFzTUN3d0xqWXBJaTgrUEhSbGVIUWdlRDBpTVRKd2VDSWdlVDBpTVRkd2VDSStQSFJ6Y0dGdUlHWnBiR3c5SWlNNU9Ua2lQa2xFT2lBOEwzUnpjR0Z1UGpFM01UYzVPRFk1TVRnM1BDOTBaWGgwUGp3dlp6NDhaeUJ6ZEhsc1pUMGlkSEpoYm5ObWIzSnRPblJ5WVc1emJHRjBaU2d5T1hCNExDQTBNVFJ3ZUNraVBqeHlaV04wSUhkcFpIUm9QU0l4TkRCd2VDSWdhR1ZwWjJoMFBTSXlObkI0SWlCeWVEMGlPSEI0SWlCeWVUMGlPSEI0SWlCbWFXeHNQU0p5WjJKaEtEQXNNQ3d3TERBdU5pa2lMejQ4ZEdWNGRDQjRQU0l4TW5CNElpQjVQU0l4TjNCNElqNDhkSE53WVc0Z1ptbHNiRDBpSXprNU9TSStSMkZ6SUhWelpXUTZJRHd2ZEhOd1lXNCtNamN6TmpRMlBDOTBaWGgwUGp3dlp6NDhaeUJ6ZEhsc1pUMGlkSEpoYm5ObWIzSnRPblJ5WVc1emJHRjBaU2d5T1hCNExDQTBORFJ3ZUNraVBqeHlaV04wSUhkcFpIUm9QU0l4TVRKd2VDSWdhR1ZwWjJoMFBTSXlObkI0SWlCeWVEMGlPSEI0SWlCeWVUMGlPSEI0SWlCbWFXeHNQU0p5WjJKaEtEQXNNQ3d3TERBdU5pa2lMejQ4ZEdWNGRDQjRQU0l4TW5CNElpQjVQU0l4TjNCNElqNDhkSE53WVc0Z1ptbHNiRDBpSXprNU9TSStSMkZ6SUc5d2RHazZJRHd2ZEhOd1lXNCtOamNsUEM5MFpYaDBQand2Wno0OEwyYytQR2NnYzNSNWJHVTlJblJ5WVc1elptOXliVHAwY21GdWMyeGhkR1VvTVRnd2NIZ3NJRE0yTlhCNEtTSStQSEpsWTNRZ2MzUjViR1U5SW1acGJIUmxjam9nZFhKc0tDTnBZMjl1S1NJZ2VEMGlNSEI0SWlCNVBTSXdjSGdpSUhkcFpIUm9QU0k0TTNCNElpQm9aV2xuYUhROUlqWTBjSGdpTHo0OEwyYytQQzl6ZG1jKyJ9"
        );
        assertEq(
            opt.tokenURI((SQRT_ID << 32) | 4),
            "data:application/json;base64,eyJuYW1lIjoiT3B0aW1pem9yIENsdWI6IFNRUlQiLCJkZXNjcmlwdGlvbiI6IkNhbGN1bGF0aW5nIHRoZSBzcXVhcmUgcm9vdCBvZiBhbiBhcnJheSBvZiBGaXhlZDE4IG51bWJlcnNcbkxlYWRlcmJvYXJkOlxuMS4gMHhiNGM3OWRhYjhmMjU5YzdhZWU2ZTViMmFhNzI5ODIxODY0MjI3ZTg0XG4yLiAweGI0Yzc5ZGFiOGYyNTljN2FlZTZlNWIyYWE3Mjk4MjE4NjQyMjdlODRcbjMuIDB4YjRjNzlkYWI4ZjI1OWM3YWVlNmU1YjJhYTcyOTgyMTg2NDIyN2U4NFxuNC4gMHhiNGM3OWRhYjhmMjU5YzdhZWU2ZTViMmFhNzI5ODIxODY0MjI3ZTg0IiwiYXR0cmlidXRlcyI6W3sidHJhaXRfdHlwZSI6IkNoYWxsZW5nZSIsInZhbHVlIjoiU1FSVCJ9LHsidHJhaXRfdHlwZSI6IkdhcyB1c2VkIiwidmFsdWUiOjEzOTA3MiwiZGlzcGxheV90eXBlIjoibnVtYmVyIn0seyJ0cmFpdF90eXBlIjoiQ29kZSBzaXplIiwidmFsdWUiOjEwOTIsImRpc3BsYXlfdHlwZSI6Im51bWJlciJ9LHsidHJhaXRfdHlwZSI6IkltcHJvdmVtZW50IHBlcmNlbnRhZ2UiLCJ2YWx1ZSI6IjUwJSJ9LHsidHJhaXRfdHlwZSI6IlNvbHZlciIsInZhbHVlIjoiMHhiNGM3OWRhYjhmMjU5YzdhZWU2ZTViMmFhNzI5ODIxODY0MjI3ZTg0In0seyJ0cmFpdF90eXBlIjoiUmFuayIsInZhbHVlIjoxLCJtYXhfdmFsdWUiOjR9LHsidHJhaXRfdHlwZSI6IkxlYWRlciIsInZhbHVlIjoiWWVzIn0seyJ0cmFpdF90eXBlIjoiVG9wIDMiLCJ2YWx1ZSI6IlllcyJ9LHsidHJhaXRfdHlwZSI6IlRvcCAxMCIsInZhbHVlIjoiWWVzIn1dLCJpbWFnZSI6ImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjNhV1IwYUQwaU1qa3dJaUJvWldsbmFIUTlJalV3TUNJZ2RtbGxkMEp2ZUQwaU1DQXdJREk1TUNBMU1EQWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SWdlRzFzYm5NNmVHeHBibXM5SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpFNU9Ua3ZlR3hwYm1zaVBqeGtaV1p6UGp4bWFXeDBaWElnYVdROUltbGpiMjRpUGp4bVpVbHRZV2RsSUhKbGMzVnNkRDBpYVdOdmJpSWdlR3hwYm1zNmFISmxaajBpWkdGMFlUcHBiV0ZuWlM5emRtY3JlRzFzTzJKaGMyVTJOQ3hRU0U0eVdubENNMkZYVWpCaFJEQnBUVlJaTWt4cVZUVk9lVWxuWVVkV2NGb3lhREJRVTBsNFRXcG5kVTlVVVhoSmFVSXlZVmRXTTFGdE9UUlFVMGwzU1VSQlowNUVVWFZOUkdNMVNVUk5NRXhxUlhoT2FVbG5aVWN4YzJKdVRUbEpiV2d3WkVoQk5reDVPVE5rTTJOMVpIcE5kV0l6U201TWVrbDNUVVJCZG1NeldtNUphalE0WTBkR01HRkRRbXRRVTBwT1RXcEJkVTU2YTNwSlJFVjZUR3BOZVUxWFozUk1hbGw1VFRGWmVFMXBORE5oUXpBeVRHcEplVTVZV1hWT2FrbDVZVU0wTWsxcVNqSk1hbGw1VFRKbmRFeHFXWGxOYmxsMVRtcEplV0ZETUhWT2FrbDZaR2t3ZFU1cVNYbFRSRVY1VEdwa01rNXBOSGxOYWxadlRHcFplVTF1V1hWT2FrbDZZVU0wTWsxcVRqSk1hbGw1VFcxbk1reHFTWGxPV0ZsMFRHcFplVTF0WjNWT2FrbDZaR2t3ZFU1cVNYcGhRelF5VFdwS01reFVXWFZOYWtreFlVTXdkVTVxU1hsbGJUQjBUWGswTTAxNlZXZE9VelF5VFVST01reFVVWFZOZWxVMFlVUkZkVTlFV1ROa2FsRjFUWHBWTkdWdE1IaE5lVFF5VDFSbmRFNXBOSGxOYWxadlRGUlpkVTlFVVRSa2FUUXlUV3BLYjB4cVdYbE5NMWwxVG1wSmVtRkRNSFZPYWtsNlpHazBNazFxU205TVV6UXlUV3BLTWt4VE5ESk5ha3B2VEZNME1rMXFUakpPYVRSNVRXcFdiMHhxV1hsTk0xbDFUbXBKZW1GRE5ESk5ha295VEdwWmVVMXRaekpNYW1jd1QwaFpkRXhxV1hsTmJXZDFUbXBKZVdScE1IaE1ha2t3VGxkbmRFeHFXWGxOYmxsMFRHcFplVTB3WjNsT2VUUjNUVzVaZEU1RE5IcE9WR2h2VFhrME0wMTZWakpNVXpReVRXcEtiMHhxV1hsTmJsbDBUR3BaZVUweVozUk1hbGw1VFc1dmFVbElUakJsVjNoc1VGTktiV0ZYZUhOUGFVMHlUbXBaYVV4Nk5EaE1NMDR5V25vMFBTSXZQand2Wm1sc2RHVnlQanhtYVd4MFpYSWdhV1E5SW1ZeElqNDhabVZKYldGblpTQnlaWE4xYkhROUluQXdJaUI0YkdsdWF6cG9jbVZtUFNKa1lYUmhPbWx0WVdkbEwzTjJaeXQ0Yld3N1ltRnpaVFkwTEZCSVRqSmFlVUl6WVZkU01HRkVNRzVOYW10M1NubENiMXBYYkc1aFNGRTVTbnBWZDAxRFkyZGtiV3hzWkRCS2RtVkVNRzVOUTBGM1NVUkpOVTFEUVRGTlJFRnVTVWhvZEdKSE5YcFFVMlJ2WkVoU2QwOXBPSFprTTJRelRHNWpla3h0T1hsYWVUaDVUVVJCZDB3elRqSmFlV01yVUVoS2JGa3pVV2RrTW14clpFZG5PVXA2U1RWTlNFSTBTbmxDYjFwWGJHNWhTRkU1U25wVmQwMUlRalJLZVVKdFlWZDRjMUJUWTJwTlJFRjNUVVJCZDBwNU9DdFFRemw2Wkcxakt5SXZQanhtWlVsdFlXZGxJSEpsYzNWc2REMGljREVpSUhoc2FXNXJPbWh5WldZOUltUmhkR0U2YVcxaFoyVXZjM1puSzNodGJEdGlZWE5sTmpRc1VFaE9NbHA1UWpOaFYxSXdZVVF3YmsxcWEzZEtlVUp2V2xkc2JtRklVVGxLZWxWM1RVTmpaMlJ0Ykd4a01FcDJaVVF3YmsxRFFYZEpSRWsxVFVOQk1VMUVRVzVKU0doMFlrYzFlbEJUWkc5a1NGSjNUMms0ZG1RelpETk1ibU42VEcwNWVWcDVPSGxOUkVGM1RETk9NbHA1WXl0UVIwNXdZMjFPYzFwVFFtcGxSREJ1VFZSak0wcDVRbXBsVkRCdVRWUkpNVXA1UW5sUVUyTjRUV3BDZDJWRFkyZGFiV3h6WWtRd2JrbDZRWGROUkVGM1RVTmpkbEJxZDNaak0xcHVVR2M5UFNJdlBqeG1aVWx0WVdkbElISmxjM1ZzZEQwaWNESWlJSGhzYVc1ck9taHlaV1k5SW1SaGRHRTZhVzFoWjJVdmMzWm5LM2h0YkR0aVlYTmxOalFzVUVoT01scDVRak5oVjFJd1lVUXdiazFxYTNkS2VVSnZXbGRzYm1GSVVUbEtlbFYzVFVOaloyUnRiR3hrTUVwMlpVUXdiazFEUVhkSlJFazFUVU5CTVUxRVFXNUpTR2gwWWtjMWVsQlRaRzlrU0ZKM1QyazRkbVF6WkROTWJtTjZURzA1ZVZwNU9IbE5SRUYzVEROT01scDVZeXRRUjA1d1kyMU9jMXBUUW1wbFJEQnVUVlJaZDBwNVFtcGxWREJ1VFhwbk5VcDVRbmxRVTJONFRXcENkMlZEWTJkYWJXeHpZa1F3YmtsNlFYZE5SRUYzVFVOamRsQnFkM1pqTTFwdVVHYzlQU0lnTHo0OFptVkpiV0ZuWlNCeVpYTjFiSFE5SW5BeklpQjRiR2x1YXpwb2NtVm1QU0prWVhSaE9tbHRZV2RsTDNOMlp5dDRiV3c3WW1GelpUWTBMRkJJVGpKYWVVSXpZVmRTTUdGRU1HNU5hbXQzU25sQ2IxcFhiRzVoU0ZFNVNucFZkMDFEWTJka2JXeHNaREJLZG1WRU1HNU5RMEYzU1VSSk5VMURRVEZOUkVGdVNVaG9kR0pITlhwUVUyUnZaRWhTZDA5cE9IWmtNMlF6VEc1amVreHRPWGxhZVRoNVRVUkJkMHd6VGpKYWVXTXJVRWRPY0dOdFRuTmFVMEpxWlVRd2JrMVVVVEJLZVVKcVpWUXdiazFxUVRWS2VVSjVVRk5qZUUxRVFuZGxRMk5uV20xc2MySkVNRzVKZWtGM1RVUkJkMDFEWTNaUWFuZDJZek5hYmxCblBUMGlMejQ4Wm1WQ2JHVnVaQ0J0YjJSbFBTSnZkbVZ5YkdGNUlpQnBiajBpY0RBaUlHbHVNajBpY0RFaUx6NDhabVZDYkdWdVpDQnRiMlJsUFNKbGVHTnNkWE5wYjI0aUlHbHVNajBpY0RJaUx6NDhabVZDYkdWdVpDQnRiMlJsUFNKdmRtVnliR0Y1SWlCcGJqSTlJbkF6SWlCeVpYTjFiSFE5SW1Kc1pXNWtUM1YwSWk4K1BHWmxSMkYxYzNOcFlXNUNiSFZ5SUdsdVBTSmliR1Z1WkU5MWRDSWdjM1JrUkdWMmFXRjBhVzl1UFNJME1pSXZQand2Wm1sc2RHVnlQanhqYkdsd1VHRjBhQ0JwWkQwaVkyOXlibVZ5Y3lJK1BISmxZM1FnZDJsa2RHZzlJakk1TUNJZ2FHVnBaMmgwUFNJMU1EQWlJSEo0UFNJME1pSWdjbms5SWpReUlpOCtQQzlqYkdsd1VHRjBhRDQ4Y0dGMGFDQnBaRDBpZEdWNGRDMXdZWFJvTFdFaUlHUTlJazAwTUNBeE1pQklNalV3SUVFeU9DQXlPQ0F3SURBZ01TQXlOemdnTkRBZ1ZqUTJNQ0JCTWpnZ01qZ2dNQ0F3SURFZ01qVXdJRFE0T0NCSU5EQWdRVEk0SURJNElEQWdNQ0F4SURFeUlEUTJNQ0JXTkRBZ1FUSTRJREk0SURBZ01DQXhJRFF3SURFeUlIb2lMejQ4Y0dGMGFDQnBaRDBpYldsdWFXMWhjQ0lnWkQwaVRUSXpOQ0EwTkRSRE1qTTBJRFExTnk0NU5Ea2dNalF5TGpJeElEUTJNeUF5TlRNZ05EWXpJaTgrUEdacGJIUmxjaUJwWkQwaWRHOXdMWEpsWjJsdmJpMWliSFZ5SWo0OFptVkhZWFZ6YzJsaGJrSnNkWElnYVc0OUlsTnZkWEpqWlVkeVlYQm9hV01pSUhOMFpFUmxkbWxoZEdsdmJqMGlNalFpTHo0OEwyWnBiSFJsY2o0OGJHbHVaV0Z5UjNKaFpHbGxiblFnYVdROUltZHlZV1F0ZFhBaUlIZ3hQU0l4SWlCNE1qMGlNQ0lnZVRFOUlqRWlJSGt5UFNJd0lqNDhjM1J2Y0NCdlptWnpaWFE5SWpBdU1DSWdjM1J2Y0MxamIyeHZjajBpSTJabVppSWdjM1J2Y0MxdmNHRmphWFI1UFNJeElpOCtQSE4wYjNBZ2IyWm1jMlYwUFNJdU9TSWdjM1J2Y0MxamIyeHZjajBpSTJabVppSWdjM1J2Y0MxdmNHRmphWFI1UFNJd0lpOCtQQzlzYVc1bFlYSkhjbUZrYVdWdWRENDhiR2x1WldGeVIzSmhaR2xsYm5RZ2FXUTlJbWR5WVdRdFpHOTNiaUlnZURFOUlqQWlJSGd5UFNJeElpQjVNVDBpTUNJZ2VUSTlJakVpUGp4emRHOXdJRzltWm5ObGREMGlNQzR3SWlCemRHOXdMV052Ykc5eVBTSWpabVptSWlCemRHOXdMVzl3WVdOcGRIazlJakVpTHo0OGMzUnZjQ0J2Wm1aelpYUTlJakF1T1NJZ2MzUnZjQzFqYjJ4dmNqMGlJMlptWmlJZ2MzUnZjQzF2Y0dGamFYUjVQU0l3SWk4K1BDOXNhVzVsWVhKSGNtRmthV1Z1ZEQ0OGJXRnpheUJwWkQwaVptRmtaUzExY0NJZ2JXRnphME52Ym5SbGJuUlZibWwwY3owaWIySnFaV04wUW05MWJtUnBibWRDYjNnaVBqeHlaV04wSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlHWnBiR3c5SW5WeWJDZ2paM0poWkMxMWNDa2lMejQ4TDIxaGMycytQRzFoYzJzZ2FXUTlJbVpoWkdVdFpHOTNiaUlnYldGemEwTnZiblJsYm5SVmJtbDBjejBpYjJKcVpXTjBRbTkxYm1ScGJtZENiM2dpUGp4eVpXTjBJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUdacGJHdzlJblZ5YkNnalozSmhaQzFrYjNkdUtTSXZQand2YldGemF6NDhiV0Z6YXlCcFpEMGlibTl1WlNJZ2JXRnphME52Ym5SbGJuUlZibWwwY3owaWIySnFaV04wUW05MWJtUnBibWRDYjNnaVBqeHlaV04wSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlHWnBiR3c5SWlObVptWWlMejQ4TDIxaGMycytQR3hwYm1WaGNrZHlZV1JwWlc1MElHbGtQU0puY21Ga0xYTjViV0p2YkNJK1BITjBiM0FnYjJabWMyVjBQU0l3TGpjaUlITjBiM0F0WTI5c2IzSTlJaU5tWm1ZaUlITjBiM0F0YjNCaFkybDBlVDBpTVNJdlBqeHpkRzl3SUc5bVpuTmxkRDBpTGprMUlpQnpkRzl3TFdOdmJHOXlQU0lqWm1abUlpQnpkRzl3TFc5d1lXTnBkSGs5SWpBaUx6NDhMMnhwYm1WaGNrZHlZV1JwWlc1MFBqeHRZWE5ySUdsa1BTSm1ZV1JsTFhONWJXSnZiQ0lnYldGemEwTnZiblJsYm5SVmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlQanh5WldOMElIZHBaSFJvUFNJeU9UQndlQ0lnYUdWcFoyaDBQU0l5TURCd2VDSWdabWxzYkQwaWRYSnNLQ05uY21Ga0xYTjViV0p2YkNraUx6NDhMMjFoYzJzK1BDOWtaV1p6UGp4bklHTnNhWEF0Y0dGMGFEMGlkWEpzS0NOamIzSnVaWEp6S1NJK1BISmxZM1FnWm1sc2JEMGlNREF3TURBd0lpQjRQU0l3Y0hnaUlIazlJakJ3ZUNJZ2QybGtkR2c5SWpJNU1IQjRJaUJvWldsbmFIUTlJalV3TUhCNElpOCtQSEpsWTNRZ2MzUjViR1U5SW1acGJIUmxjam9nZFhKc0tDTm1NU2tpSUhnOUlqQndlQ0lnZVQwaU1IQjRJaUIzYVdSMGFEMGlNamt3Y0hnaUlHaGxhV2RvZEQwaU5UQXdjSGdpTHo0OFp5QnpkSGxzWlQwaVptbHNkR1Z5T25WeWJDZ2pkRzl3TFhKbFoybHZiaTFpYkhWeUtUc2dkSEpoYm5ObWIzSnRPbk5qWVd4bEtERXVOU2s3SUhSeVlXNXpabTl5YlMxdmNtbG5hVzQ2WTJWdWRHVnlJSFJ2Y0RzaVBqeHlaV04wSUdacGJHdzlJbTV2Ym1VaUlIZzlJakJ3ZUNJZ2VUMGlNSEI0SWlCM2FXUjBhRDBpTWprd2NIZ2lJR2hsYVdkb2REMGlOVEF3Y0hnaUx6NDhaV3hzYVhCelpTQmplRDBpTlRBbElpQmplVDBpTUhCNElpQnllRDBpTVRnd2NIZ2lJSEo1UFNJeE1qQndlQ0lnWm1sc2JEMGlJekF3TUNJZ2IzQmhZMmwwZVQwaU1DNDROU0l2UGp3dlp6NDhjbVZqZENCNFBTSXdJaUI1UFNJd0lpQjNhV1IwYUQwaU1qa3dJaUJvWldsbmFIUTlJalV3TUNJZ2NuZzlJalF5SWlCeWVUMGlORElpSUdacGJHdzlJbkpuWW1Fb01Dd3dMREFzTUNraUlITjBjbTlyWlQwaWNtZGlZU2d5TlRVc01qVTFMREkxTlN3d0xqSXBJaTgrUEM5blBqeDBaWGgwSUhSbGVIUXRjbVZ1WkdWeWFXNW5QU0p2Y0hScGJXbDZaVk53WldWa0lqNDhkR1Y0ZEZCaGRHZ2djM1JoY25SUFptWnpaWFE5SWkweE1EQWxJaUJtYVd4c1BTSWpabVptSWlCbWIyNTBMV1poYldsc2VUMGlKME52ZFhKcFpYSWdUbVYzSnl3Z2JXOXViM053WVdObElpQm1iMjUwTFhOcGVtVTlJakV3Y0hnaUlIaHNhVzVyT21oeVpXWTlJaU4wWlhoMExYQmhkR2d0WVNJK1UxRlNWQ0RpZ0tJZ01IaG1OV0V5Wm1VME5XWTBaakV6TURnMU1ESmlNV014TXpaaU9XVm1PR0ZtTVRNMk1UUXhNemd5UEdGdWFXMWhkR1VnWVdSa2FYUnBkbVU5SW5OMWJTSWdZWFIwY21saWRYUmxUbUZ0WlQwaWMzUmhjblJQWm1aelpYUWlJR1p5YjIwOUlqQWxJaUIwYnowaU1UQXdKU0lnWW1WbmFXNDlJakJ6SWlCa2RYSTlJak13Y3lJZ2NtVndaV0YwUTI5MWJuUTlJbWx1WkdWbWFXNXBkR1VpTHo0OEwzUmxlSFJRWVhSb1BpQThkR1Y0ZEZCaGRHZ2djM1JoY25SUFptWnpaWFE5SWpBbElpQm1hV3hzUFNJalptWm1JaUJtYjI1MExXWmhiV2xzZVQwaUowTnZkWEpwWlhJZ1RtVjNKeXdnYlc5dWIzTndZV05sSWlCbWIyNTBMWE5wZW1VOUlqRXdjSGdpSUhoc2FXNXJPbWh5WldZOUlpTjBaWGgwTFhCaGRHZ3RZU0krVTFGU1ZDRGlnS0lnTUhobU5XRXlabVUwTldZMFpqRXpNRGcxTURKaU1XTXhNelppT1dWbU9HRm1NVE0yTVRReE16Z3lQR0Z1YVcxaGRHVWdZV1JrYVhScGRtVTlJbk4xYlNJZ1lYUjBjbWxpZFhSbFRtRnRaVDBpYzNSaGNuUlBabVp6WlhRaUlHWnliMjA5SWpBbElpQjBiejBpTVRBd0pTSWdZbVZuYVc0OUlqQnpJaUJrZFhJOUlqTXdjeUlnY21Wd1pXRjBRMjkxYm5ROUltbHVaR1ZtYVc1cGRHVWlMejQ4TDNSbGVIUlFZWFJvUGp4MFpYaDBVR0YwYUNCemRHRnlkRTltWm5ObGREMGlOVEFsSWlCbWFXeHNQU0lqWm1abUlpQm1iMjUwTFdaaGJXbHNlVDBpSjBOdmRYSnBaWElnVG1WM0p5d2diVzl1YjNOd1lXTmxJaUJtYjI1MExYTnBlbVU5SWpFd2NIZ2lJSGhzYVc1ck9taHlaV1k5SWlOMFpYaDBMWEJoZEdndFlTSStUM0IwYVcxcGVtOXlJRU5zZFdJZzRvQ2lJREI0WWpSak56bGtZV0k0WmpJMU9XTTNZV1ZsTm1VMVlqSmhZVGN5T1RneU1UZzJOREl5TjJVNE5EeGhibWx0WVhSbElHRmtaR2wwYVhabFBTSnpkVzBpSUdGMGRISnBZblYwWlU1aGJXVTlJbk4wWVhKMFQyWm1jMlYwSWlCbWNtOXRQU0l3SlNJZ2RHODlJakV3TUNVaUlHSmxaMmx1UFNJd2N5SWdaSFZ5UFNJek1ITWlJSEpsY0dWaGRFTnZkVzUwUFNKcGJtUmxabWx1YVhSbElpOCtQQzkwWlhoMFVHRjBhRDQ4ZEdWNGRGQmhkR2dnYzNSaGNuUlBabVp6WlhROUlpMDFNQ1VpSUdacGJHdzlJaU5tWm1ZaUlHWnZiblF0Wm1GdGFXeDVQU0luUTI5MWNtbGxjaUJPWlhjbkxDQnRiMjV2YzNCaFkyVWlJR1p2Ym5RdGMybDZaVDBpTVRCd2VDSWdlR3hwYm1zNmFISmxaajBpSTNSbGVIUXRjR0YwYUMxaElqNVBjSFJwYldsNmIzSWdRMngxWWlEaWdLSWdNSGhpTkdNM09XUmhZamhtTWpVNVl6ZGhaV1UyWlRWaU1tRmhOekk1T0RJeE9EWTBNakkzWlRnMFBHRnVhVzFoZEdVZ1lXUmthWFJwZG1VOUluTjFiU0lnWVhSMGNtbGlkWFJsVG1GdFpUMGljM1JoY25SUFptWnpaWFFpSUdaeWIyMDlJakFsSWlCMGJ6MGlNVEF3SlNJZ1ltVm5hVzQ5SWpCeklpQmtkWEk5SWpNd2N5SWdjbVZ3WldGMFEyOTFiblE5SW1sdVpHVm1hVzVwZEdVaUx6NDhMM1JsZUhSUVlYUm9Qand2ZEdWNGRENDhaeUJ0WVhOclBTSjFjbXdvSTJaaFpHVXRjM2x0WW05c0tTSStQSEpsWTNRZ1ptbHNiRDBpYm05dVpTSWdlRDBpTUhCNElpQjVQU0l3Y0hnaUlIZHBaSFJvUFNJeU9UQndlQ0lnYUdWcFoyaDBQU0l5TURCd2VDSXZQangwWlhoMElIazlJamN3Y0hnaUlIZzlJak15Y0hnaUlHWnBiR3c5SWlObVptWWlJR1p2Ym5RdFptRnRhV3g1UFNJblEyOTFjbWxsY2lCT1pYY25MQ0J0YjI1dmMzQmhZMlVpSUdadmJuUXRkMlZwWjJoMFBTSXlNREFpSUdadmJuUXRjMmw2WlQwaU16WndlQ0krVTFGU1ZEd3ZkR1Y0ZEQ0OGRHVjRkQ0I1UFNJeE1UVndlQ0lnZUQwaU16SndlQ0lnWm1sc2JEMGlJMlptWmlJZ1ptOXVkQzFtWVcxcGJIazlJaWREYjNWeWFXVnlJRTVsZHljc0lHMXZibTl6Y0dGalpTSWdabTl1ZEMxM1pXbG5hSFE5SWpJd01DSWdabTl1ZEMxemFYcGxQU0l5TUhCNElqNVNZVzVySUNNeEx6UThMM1JsZUhRK1BDOW5Qanh5WldOMElIZzlJakUySWlCNVBTSXhOaUlnZDJsa2RHZzlJakkxT0NJZ2FHVnBaMmgwUFNJME5qZ2lJSEo0UFNJeU5pSWdjbms5SWpJMklpQm1hV3hzUFNKeVoySmhLREFzTUN3d0xEQXBJaUJ6ZEhKdmEyVTlJbkpuWW1Fb01qVTFMREl4TlN3d0xERXVNQ2tpTHo0OFp5QnRZWE5yUFNKMWNtd29JMjV2Ym1VcElpQnpkSGxzWlQwaWRISmhibk5tYjNKdE9uUnlZVzV6YkdGMFpTZ3pNSEI0TERFek1IQjRLU0krUEhKbFkzUWdkMmxrZEdnOUlqSXpNQ0lnYUdWcFoyaDBQU0l5TXpBaUlISjRQU0l4T0hCNElpQnllVDBpTVRod2VDSWdabWxzYkQwaWNtZGlZU2d3TERBc01Dd3dMakVwSWlBdlBqeHdiMng1WjI5dUlIQnZhVzUwY3owaU1URTFMREV4TlNBeE5EUXNNVEUxSURFME5Dd3hORFFpSUdacGJHdzlJbTV2Ym1VaUlITjBjbTlyWlQwaWQyaHBkR1VpSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBpY205MWJtUWlJSE4wY205clpTMTNhV1IwYUQwaU1pSStQR0Z1YVcxaGRHVlVjbUZ1YzJadmNtMGdZWFIwY21saWRYUmxUbUZ0WlQwaWRISmhibk5tYjNKdElpQmhkSFJ5YVdKMWRHVlVlWEJsUFNKWVRVd2lJSFI1Y0dVOUluSnZkR0YwWlNJZ1puSnZiVDBpTUNBeE1UVWdNVEUxSWlCMGJ6MGlNell3SURFeE5TQXhNVFVpSUdSMWNqMGlNVEJ6SWlCeVpYQmxZWFJEYjNWdWREMGlhVzVrWldacGJtbDBaU0l2UGp3dmNHOXNlV2R2Ymo0OGNHOXNlV2R2YmlCd2IybHVkSE05SWpFeE5Td3hNVFVnTVRRMExERTBOQ0F4TWpNc01UWTBJaUJtYVd4c1BTSnViMjVsSWlCemRISnZhMlU5SW5kb2FYUmxJaUJ6ZEhKdmEyVXRiR2x1WldwdmFXNDlJbkp2ZFc1a0lpQnpkSEp2YTJVdGQybGtkR2c5SWpJaVBqeGhibWx0WVhSbFZISmhibk5tYjNKdElHRjBkSEpwWW5WMFpVNWhiV1U5SW5SeVlXNXpabTl5YlNJZ1lYUjBjbWxpZFhSbFZIbHdaVDBpV0UxTUlpQjBlWEJsUFNKeWIzUmhkR1VpSUdaeWIyMDlJakFnTVRFMUlERXhOU0lnZEc4OUlqTTJNQ0F4TVRVZ01URTFJaUJrZFhJOUlqRXdjeUlnY21Wd1pXRjBRMjkxYm5ROUltbHVaR1ZtYVc1cGRHVWlMejQ4TDNCdmJIbG5iMjQrUEhCdmJIbG5iMjRnY0c5cGJuUnpQU0l4TVRVc01URTFJREV5TXl3eE5qUWdPVFVzTVRZNUlpQm1hV3hzUFNKdWIyNWxJaUJ6ZEhKdmEyVTlJbmRvYVhSbElpQnpkSEp2YTJVdGJHbHVaV3B2YVc0OUluSnZkVzVrSWlCemRISnZhMlV0ZDJsa2RHZzlJaklpUGp4aGJtbHRZWFJsVkhKaGJuTm1iM0p0SUdGMGRISnBZblYwWlU1aGJXVTlJblJ5WVc1elptOXliU0lnWVhSMGNtbGlkWFJsVkhsd1pUMGlXRTFNSWlCMGVYQmxQU0p5YjNSaGRHVWlJR1p5YjIwOUlqQWdNVEUxSURFeE5TSWdkRzg5SWpNMk1DQXhNVFVnTVRFMUlpQmtkWEk5SWpFd2N5SWdjbVZ3WldGMFEyOTFiblE5SW1sdVpHVm1hVzVwZEdVaUx6NDhMM0J2YkhsbmIyNCtQSEJ2YkhsbmIyNGdjRzlwYm5SelBTSXhNVFVzTVRFMUlEazFMREUyT1NBMk9Dd3hOVGtpSUdacGJHdzlJbTV2Ym1VaUlITjBjbTlyWlQwaWQyaHBkR1VpSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBpY205MWJtUWlJSE4wY205clpTMTNhV1IwYUQwaU1pSStQR0Z1YVcxaGRHVlVjbUZ1YzJadmNtMGdZWFIwY21saWRYUmxUbUZ0WlQwaWRISmhibk5tYjNKdElpQmhkSFJ5YVdKMWRHVlVlWEJsUFNKWVRVd2lJSFI1Y0dVOUluSnZkR0YwWlNJZ1puSnZiVDBpTUNBeE1UVWdNVEUxSWlCMGJ6MGlNell3SURFeE5TQXhNVFVpSUdSMWNqMGlNVEJ6SWlCeVpYQmxZWFJEYjNWdWREMGlhVzVrWldacGJtbDBaU0l2UGp3dmNHOXNlV2R2Ymo0OEwyYytQR2NnWm05dWRDMW1ZVzFwYkhrOUlpZERiM1Z5YVdWeUlFNWxkeWNzSUcxdmJtOXpjR0ZqWlNJZ1ptOXVkQzF6YVhwbFBTSXhNaUlnWm1sc2JEMGlJMlptWmlJK1BHY2djM1I1YkdVOUluUnlZVzV6Wm05eWJUcDBjbUZ1YzJ4aGRHVW9Namx3ZUN3Z016ZzBjSGdwSWo0OGNtVmpkQ0IzYVdSMGFEMGlNVE16Y0hnaUlHaGxhV2RvZEQwaU1qWndlQ0lnY25nOUlqaHdlQ0lnY25rOUlqaHdlQ0lnWm1sc2JEMGljbWRpWVNnd0xEQXNNQ3d3TGpZcElpOCtQSFJsZUhRZ2VEMGlNVEp3ZUNJZ2VUMGlNVGR3ZUNJK1BIUnpjR0Z1SUdacGJHdzlJaU01T1RraVBrbEVPaUE4TDNSemNHRnVQakUzTVRjNU9EWTVNVGc0UEM5MFpYaDBQand2Wno0OFp5QnpkSGxzWlQwaWRISmhibk5tYjNKdE9uUnlZVzV6YkdGMFpTZ3lPWEI0TENBME1UUndlQ2tpUGp4eVpXTjBJSGRwWkhSb1BTSXhOREJ3ZUNJZ2FHVnBaMmgwUFNJeU5uQjRJaUJ5ZUQwaU9IQjRJaUJ5ZVQwaU9IQjRJaUJtYVd4c1BTSnlaMkpoS0RBc01Dd3dMREF1TmlraUx6NDhkR1Y0ZENCNFBTSXhNbkI0SWlCNVBTSXhOM0I0SWo0OGRITndZVzRnWm1sc2JEMGlJems1T1NJK1IyRnpJSFZ6WldRNklEd3ZkSE53WVc0K01UTTVNRGN5UEM5MFpYaDBQand2Wno0OFp5QnpkSGxzWlQwaWRISmhibk5tYjNKdE9uUnlZVzV6YkdGMFpTZ3lPWEI0TENBME5EUndlQ2tpUGp4eVpXTjBJSGRwWkhSb1BTSXhNVEp3ZUNJZ2FHVnBaMmgwUFNJeU5uQjRJaUJ5ZUQwaU9IQjRJaUJ5ZVQwaU9IQjRJaUJtYVd4c1BTSnlaMkpoS0RBc01Dd3dMREF1TmlraUx6NDhkR1Y0ZENCNFBTSXhNbkI0SWlCNVBTSXhOM0I0SWo0OGRITndZVzRnWm1sc2JEMGlJems1T1NJK1IyRnpJRzl3ZEdrNklEd3ZkSE53WVc0K05UQWxQQzkwWlhoMFBqd3ZaejQ4TDJjK1BHY2djM1I1YkdVOUluUnlZVzV6Wm05eWJUcDBjbUZ1YzJ4aGRHVW9NVGd3Y0hnc0lETTJOWEI0S1NJK1BISmxZM1FnYzNSNWJHVTlJbVpwYkhSbGNqb2dkWEpzS0NOcFkyOXVLU0lnZUQwaU1IQjRJaUI1UFNJd2NIZ2lJSGRwWkhSb1BTSTRNM0I0SWlCb1pXbG5hSFE5SWpZMGNIZ2lMejQ4TDJjK1BDOXpkbWMrIn0="
        );
    }
}
